{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","initialState","query","status","filterReducer","todos","loading","error","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","filteredTodos","lowerQueery","toLowerCase","lowerTitle","title","todoStatus","completed","includes","notFound","length","className","map","id","classNames","onClick","handleSelectTodo","TodoFilter","isQueryFull","onSubmit","event","preventDefault","value","onChange","filterActions","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","useState","user","setUser","name","email","loadUser","UsId","a","newUser","useEffect","href","App","todosActions","data","catch","err","message","finally","Root","ReactDOM","render","document","getElementById"],"mappings":"mOAgBaA,EALG,SAACC,GAAD,MAAgC,CAC9CC,KAAM,kBACNC,QAASF,IAGED,EAPM,iBAAyB,CAAEE,KAAM,uBA4BrCE,EAhBY,WAGd,IAFXC,EAEU,uDAFK,KACfC,EACU,uCACV,OAAQA,EAAOJ,MACb,IAAK,kBACH,OAAOI,EAAOH,QAEhB,IAAK,qBACH,OAAO,KAET,QACE,OAAOE,I,OC/BPE,EAAe,CACnBC,MAAO,GACPC,OAAQ,OA6BGT,EAdI,SAACQ,GAChB,MAAO,CACLN,KAAM,eACNC,QAASK,IAWAR,EAPK,SAACS,GACjB,MAAO,CACLP,KAAM,gBACNC,QAASM,IA4BEC,EAtBO,WAGhB,IAFJL,EAEG,uDAFKE,EACRD,EACG,uCACH,OAAQA,EAAOJ,MACb,IAAK,eACH,OAAO,2BACFG,GADL,IAEEG,MAAOF,EAAOH,UAGlB,IAAK,gBACH,OAAO,2BACFE,GADL,IAEEI,OAAQH,EAAOH,UAGnB,QACE,OAAOE,ICJAL,EArBI,SAACW,GAChB,MAAO,CACLT,KAAM,kBACNC,QAASQ,IAkBAX,EAdM,SAACY,GAClB,MAAO,CACLV,KAAM,oBACNC,QAASS,IAWAZ,EAPI,SAACa,GAChB,MAAO,CACLX,KAAM,kBACNC,QAASU,IAUPN,EAA2B,CAC/BI,MAAO,GACPC,SAAS,EACTC,MAAO,MA+BMC,EA5BM,WAGH,IAFhBT,EAEe,uDAFKE,EACpBD,EACe,uCACf,OAAQA,EAAOJ,MACb,IAAK,kBACH,OAAO,2BACFG,GADL,IAEEM,MAAOL,EAAOH,UAGlB,IAAK,kBACH,OAAO,2BACFE,GADL,IAEEQ,MAAOP,EAAOH,UAGlB,IAAK,oBACH,OAAO,2BACFE,GADL,IAEEO,QAASN,EAAOH,UAGpB,QACE,OAAOE,IC7EPU,EAAcC,0BAAgB,CAClCC,YAAab,EACbc,OAAQR,EACRC,MAAOG,IAIIK,EAAQC,sBACnBL,EACAM,8BACEC,0BAAgBC,O,sCCfPC,EAAoCC,IACpCC,EAAkDC,I,OCGlDC,EAAqB,WAChC,IAAMC,EAAWL,IAETb,EAAUe,GAAe,SAAArB,GAAK,OAAIA,EAAMM,SAAxCA,MACFM,EAAcS,GAAe,SAAArB,GAAK,OAAIA,EAAMY,eAClD,EAA0BS,GAAe,SAAArB,GAAK,OAAIA,EAAMa,UAAhDV,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAETqB,EAAgBnB,EAAMO,QAAO,SAACjB,GAClC,IAAM8B,EAAcvB,EAAMwB,cACpBC,EAAahC,EAAKiC,MAAMF,cACxBG,EAAwB,QAAX1B,GAA0BR,EAAKmC,aAA0B,cAAX3B,GAEjE,OAAOwB,EAAWI,SAASN,IAAgBI,KAOvCG,EAAoC,IAAzBR,EAAcS,OAE/B,OACE,mCACGD,EAEG,mBAAGE,UAAU,0BAAb,iEAKA,wBAAOA,UAAU,+BAAjB,UACE,gCACE,+BACE,mCAEA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAIjB,uCACA,wCAIJ,gCACGV,EAAcW,KAAI,SAACxC,GAClB,IAAQyC,EAAyBzC,EAAzByC,GAAIR,EAAqBjC,EAArBiC,MAAOE,EAAcnC,EAAdmC,UAEnB,OACE,qBAAI,UAAQ,OAAZ,UACE,oBAAII,UAAU,eAAd,SAA8BE,IAC9B,oBAAIF,UAAU,eAAd,SACGJ,GACC,sBAAMI,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAKnB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWG,IACZ,kBACA,CAAE,mBAAoBP,IAFxB,SAKGF,MAIL,oBAAIM,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVtC,KAAK,SACL0C,QAAS,kBA7DN,SAAC3C,GACxB4B,EAAS7B,EAAgBC,IA4DU4C,CAAiB5C,IAJlC,SAME,sBAAMuC,UAAU,OAAhB,SACE,mBAAGA,UAAWG,IAAW,MAAO,SAAU,CAAE,eAAgBD,KAAE,OAAKzB,QAAL,IAAKA,OAAL,EAAKA,EAAayB,gBA5BhEA,cCpD7BI,EAAuB,WAClC,IAAMjB,EAAWL,IACjB,EAA0BE,GAAe,SAAArB,GAAK,OAAIA,EAAMa,UAAhDT,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,MAcVuC,EAAwB,KAAVvC,EAEpB,OACE,uBACEgC,UAAU,mBACVQ,SAAU,SAAAC,GAAK,OAAIA,EAAMC,kBAF3B,UAIE,mBAAGV,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRW,MAAO1C,EACP2C,SAhBiB,SAACH,GAC1BpB,EAASwB,EAAwBJ,EAAMK,OAAOH,SAYxC,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGX,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRtC,KAAK,OACLsC,UAAU,QACVe,YAAY,YACZJ,MAAO3C,EACP4C,SAxCkB,SAACH,GACzBpB,EAASwB,EAAuBJ,EAAMK,OAAOH,WAyCzC,sBAAMX,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBgB,MAAO,CAAEC,cAAe,OAAxD,SACGV,GACC,wBACE,UAAQ,oBACR7C,KAAK,SACLsC,UAAU,SACVI,QAhDa,WACvBf,EAASwB,EAAuB,iB,gCCZvBK,G,MAAmB,kBAC9B,qBAAKlB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASmB,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,IAEMC,EAAU,SAACC,GAAD,OAAoBZ,EAAG,iBAAiBY,KChBlDC,EAAsB,WACjC,MAAwBC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KAEM9C,EAAWL,IAEjB,EADoBE,GAAe,SAAArB,GAAK,OAAIA,EAAMY,gBAM/B,CAAEiB,MAAO,GAAIE,WAAW,EAAOmC,OAAQ,GAJxD7B,EADF,EACEA,GACAR,EAFF,EAEEA,MACAE,EAHF,EAGEA,UACAmC,EAJF,EAIEA,OAGF,EAAwBG,GAAQ,CAAEE,KAAM,GAAIC,MAAO,IAA3CD,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAIRC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACOV,EAAQS,GADf,OACTE,EADS,OAGfN,EAAQM,GAHO,2CAAH,sDAUd,OAJAC,qBAAU,WACRJ,EAASP,MAIT,sBAAK/B,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBACbkC,EAGE,sBAAKlC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYE,KAIZ,wBACExC,KAAK,SACLsC,UAAU,SACV,UAAQ,cACRI,QAhCM,kBAAMf,EAAS7B,WAoCzB,sBAAKwC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SAA4CN,IAE5C,oBAAGM,UAAU,QAAQ,UAAQ,aAA7B,UACGJ,EACI,wBAAQI,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAGJ,OACD,mBAAG2C,KAAI,iBAAYN,GAAnB,SAA6BD,aA9BlC,cAAC,EAAD,QCxBEQ,EAAgB,WAC3B,IAAMnE,EAAcS,GAAe,SAAArB,GAAK,OAAIA,EAAMY,eAC1CL,EAAYc,GAAe,SAAArB,GAAK,OAAIA,EAAMM,SAA1CC,QACFiB,EAAWL,IAcjB,OAZA0D,qBAAU,WACRrD,EAASwD,GAAwB,IFEP1B,EAAY,UEA3BO,MAAK,SAACoB,GACfzD,EAASwD,EAAsBC,OAC9BC,OAAM,SAACC,GACR3D,EAASwD,EAAsBG,EAAIC,aAClCC,SAAQ,WACT7D,EAASwD,GAAwB,SAElC,IAGD,qCACE,qBAAK7C,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,QAAf,SACG5B,EACI,cAAC,EAAD,IACA,cAAC,EAAD,aAMZK,GACC,cAAC,EAAD,QC1CF0E,EAAO,kBACX,cAAC,IAAD,CAAUxE,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,SAKNyE,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.12dc1a1f.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\nconst initialState = {\n  query: '',\n  status: 'all',\n};\n\ntype QueryAction = {\n  type: 'filter/QUERY';\n  payload: string;\n};\n\ntype StatusAction = {\n  type: 'filter/STATUS';\n  payload: Status;\n};\n\ntype FilterAction = QueryAction | StatusAction;\n\nconst setQuery = (query: string): QueryAction => {\n  return {\n    type: 'filter/QUERY',\n    payload: query,\n  };\n};\n\nconst setStatus = (status: Status): StatusAction => {\n  return {\n    type: 'filter/STATUS',\n    payload: status,\n  };\n};\n\nexport const actions = { setQuery, setStatus };\n\nconst filterReducer = (\n  state = initialState,\n  action: FilterAction,\n) => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'filter/STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype TodosState = {\n  todos: Todo[];\n  loading: boolean;\n  error: string | null;\n};\n\ntype SetTodosAction = {\n  type: 'todos/SET_TODOS';\n  payload: Todo[];\n};\n\ntype SetLoadingAction = {\n  type: 'todos/SET_LOADING';\n  payload: boolean;\n};\n\ntype SetErrorAction = {\n  type: 'todos/SET_ERROR';\n  payload: string | null;\n};\n\ntype TodosAction =\n  SetTodosAction\n  | SetLoadingAction\n  | SetErrorAction;\n\nconst setTodos = (todos: Todo[]): SetTodosAction => {\n  return {\n    type: 'todos/SET_TODOS',\n    payload: todos,\n  };\n};\n\nconst setLoading = (loading: boolean): SetLoadingAction => {\n  return {\n    type: 'todos/SET_LOADING',\n    payload: loading,\n  };\n};\n\nconst setError = (error: string): SetErrorAction => {\n  return {\n    type: 'todos/SET_ERROR',\n    payload: error,\n  };\n};\n\nexport const actions = {\n  setTodos,\n  setLoading,\n  setError,\n};\n\nconst initialState: TodosState = {\n  todos: [],\n  loading: false,\n  error: null,\n};\n\nconst todosReducer = (\n  state: TodosState = initialState,\n  action: TodosAction,\n): TodosState => {\n  switch (action.type) {\n    case 'todos/SET_TODOS':\n      return {\n        ...state,\n        todos: action.payload,\n      };\n\n    case 'todos/SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case 'todos/SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const { todos } = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const filteredTodos = todos.filter((todo) => {\n    const lowerQueery = query.toLowerCase();\n    const lowerTitle = todo.title.toLowerCase();\n    const todoStatus = status === 'all' ? true : todo.completed === (status === 'completed');\n\n    return lowerTitle.includes(lowerQueery) && todoStatus;\n  });\n\n  const handleSelectTodo = (todo: Todo) => {\n    dispatch(actions.setTodo(todo));\n  };\n\n  const notFound = filteredTodos.length === 0;\n\n  return (\n    <>\n      {notFound\n        ? (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        )\n        : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {filteredTodos.map((todo) => {\n                const { id, title, completed } = todo;\n\n                return (\n                  <tr data-cy=\"todo\" key={id}>\n                    <td className=\"is-vcentered\">{id}</td>\n                    <td className=\"is-vcentered\">\n                      {completed && (\n                        <span className=\"icon\" data-cy=\"iconCompleted\">\n                          <i className=\"fas fa-check\" />\n                        </span>\n                      )}\n                    </td>\n\n                    <td className=\"is-vcentered is-expanded\">\n                      <p className={classNames(\n                        'has-text-danger',\n                        { 'has-text-success': completed },\n                      )}\n                      >\n                        {title}\n                      </p>\n                    </td>\n\n                    <td className=\"has-text-right is-vcentered\">\n                      <button\n                        data-cy=\"selectButton\"\n                        className=\"button\"\n                        type=\"button\"\n                        onClick={() => handleSelectTodo(todo)}\n                      >\n                        <span className=\"icon\">\n                          <i className={classNames('far', 'fa-eye', { 'fa-eye-slash': id === currentTodo?.id })} />\n                        </span>\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { status, query } = useAppSelector(state => state.filter);\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(filterActions.setQuery(event.target.value));\n  };\n\n  const handleClearQuery = () => {\n    dispatch(filterActions.setQuery(''));\n  };\n\n  const handleChangeStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(filterActions.setStatus(event.target.value as Status));\n  };\n\n  const isQueryFull = query !== '';\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleChangeStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {isQueryFull && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearQuery}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = currentTodo || { title: '', completed: false, userId: 0 };\n\n  const { name, email } = user || { name: '', email: '' };\n\n  const removeTodod = () => dispatch(actions.removeTodo());\n\n  const loadUser = async (UsId: number) => {\n    const newUser = await getUser(UsId);\n\n    setUser(newUser);\n  };\n\n  useEffect(() => {\n    loadUser(userId);\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!user\n        ? (<Loader />)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={removeTodod}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">{title}</p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>\n                  )}\n\n                {' by '}\n                <a href={`mailto:${email}`}>{name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions as todosActions } from './features/todos';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const { loading } = useAppSelector(state => state.todos);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(todosActions.setLoading(true));\n\n    getTodos().then((data) => {\n      dispatch(todosActions.setTodos(data));\n    }).catch((err) => {\n      dispatch(todosActions.setError(err.message));\n    }).finally(() => {\n      dispatch(todosActions.setLoading(false));\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? (<Loader />)\n                : (<TodoList />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}